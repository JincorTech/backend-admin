<?php

namespace App\Repositories;

use App\Models\Company;
use App\Models\Profile;
use InfyOm\Generator\Common\BaseRepository;

class CompanyRepository extends BaseRepository
{
    /**
     * @var array
     */
    protected $fieldSearchable = [
        'legalName'
    ];

    /**
     * Configure the Model
     **/
    public function model()
    {
        return Company::class;
    }

    public function create(array $attributes)
    {
        $model = parent::create($attributes); // TODO: Change the autogenerated stub
        $profile = new Profile($attributes['profile']);
        $model->profile()->save($profile);
        return $model;
    }

    public function getEmployeeCountStat()
    {
        $employeeCountCursor = Company::raw()->aggregate([
            [
                '$lookup' => [
                    'from' => 'departments',
                    'localField' => '_id',
                    'foreignField' => 'companyId',
                    'as' => 'departments',
                ],
            ],
            ['$unwind' => '$departments'],
            [
                '$lookup' => [
                    'from' => 'employees',
                    'localField' => 'departments._id',
                    'foreignField' => 'departmentId',
                    'as' => 'employees',
                ],
            ],
            [
                '$project' => [
                    'profile.legalName' => true,
                    'employeesCount' => [
                        '$size' => '$employees',
                    ],
                ],
            ],
            [
                '$bucket' => [
                    'groupBy' => '$employeesCount',
                    'boundaries' => [0, 11, 51, 101],
                    'default' => 1000,
                    'output' => [
                        'count' => ['$sum' => 1],
                    ],
                ],
            ],
        ]);

        $employeeCountLabels = [
            0 => 'From 0 to 10',
            11 => 'From 11 to 50',
            51 => 'From 51 to 100',
            1000 => '101 and more',
        ];

        $employeeCountData = [
            0 => 0,
            11 => 0,
            51 => 0,
            1000 => 0,
        ];

        foreach ($employeeCountCursor as $item) {
            $employeeCountData[(int)$item['_id']] = (int)$item['count'];
        }

        return [
            'labels' => array_values($employeeCountLabels),
            'data' => array_values($employeeCountData),
        ];
    }

    public function getCountryCountStat()
    {
        $countryCountCursor = Company::raw()->aggregate([
            [
                '$group' => [
                    '_id' => '$profile.address.countryId',
                    'count' => ['$sum' => 1],
                ],
            ],
            [
                '$lookup' => [
                    'from' => 'countries',
                    'localField' => '_id',
                    'foreignField' => '_id',
                    'as' => 'country',
                ],
            ],
        ]);

        $countsByCountryLabels = [];
        $countsByCountryData = [];
        foreach ($countryCountCursor as $country) {
            $countsByCountryLabels[] = $country->country[0]->names['en'];
            $countsByCountryData[] = $country['count'];
        }

        return [
            'labels' => $countsByCountryLabels,
            'data' => $countsByCountryData,
        ];
    }
}
